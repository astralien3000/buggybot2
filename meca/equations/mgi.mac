/* Chargement des fonctions utiles */
batchload("mgd.mac")$
batchload("utils.mac")$

/* Target */
P["L3"] : transpose([0,0,0])$

Pd["L0"] : transpose([x,y,z])$
P["L0"] : apply_point(T["L0", "L3"], P["L3"])$

Pd["L1"] : apply_point(T["L1", "L0"], Pd["L0"])$
P["L1"] : apply_point(T["L1", "L3"], P["L3"])$

/* Eqn */
eq1 : simplif_trigo_reduce(P["L1"][1,1] - Pd["L1"][1,1])$
eq2 : simplif_trigo_reduce(P["L1"][2,1] - Pd["L1"][2,1])$
eq3 : simplif_trigo_reduce(P["L1"][3,1] - Pd["L1"][3,1])$

eq1;
eq2;
eq3;

sY0 : -ratcoeff(eq1, cos(q0), 1);
sX0 : -ratcoeff(eq1, sin(q0), 1);
sZ0 : subst([cos(q0)=0,sin(q0)=0], eq1);

sq0_main : atan2(sY0, sX0)$
sq0_delta : asin(sZ0 / sqrt(sX0^2 + sY0^2))$

sq0 : [sq0_delta - sq0_main, %pi - sq0_delta - sq0_main];

subst_l : [
cos(q0) = c0,
sin(q0) = s0,
c0 * z = z0,
s0 * y = y0,
q1 + q2 = q3
]$

eq4 : subst(subst_l, eq3);
eq5 : subst(subst_l, eq2)$
eq5 : -eq5;

paul1 : X * cos(Ai) + Y * sin(Ai) + Z1 - W * sin(Ak)$
paul2 : X * sin(Ai) - Y * cos(Ai) + Z2 - W * cos(Ak)$

l_subst : [
Ai = q1,
Ak = -q3
]$

paul3 : subst(l_subst, paul1);
paul4 : subst(l_subst, paul2);

e1 : ratcoeff(paul4 - eq4, cos(q1), 1);
e2 : ratcoeff(paul4 - eq4, sin(q1), 1);
e3 : ratcoeff(paul4 - eq4, cos(q3), 1);
e4 : ratcoeff(paul3 - eq5, sin(q1), 1);
e5 : ratcoeff(paul3 - eq5, cos(q1), 1);
e6 : ratcoeff(paul3 - eq5, sin(q3), 1);
e7 : subst([cos(q1) = 0, sin(q1) = 0, cos(q3) = 0, sin(q3) = 0], paul4 - eq4);
e8 : subst([cos(q1) = 0, sin(q1) = 0, cos(q3) = 0, sin(q3) = 0], paul3 - eq5);

solve([e1=0,e2=0,e3=0,e4=0,e5=0,e6=0,e7=0,e8=0], [X,Y,Z1,Z2,W]);

